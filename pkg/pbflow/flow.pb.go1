// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/flow.proto

package pbflow

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// as defined by field 61 in
// https://www.iana.org/assignments/ipfix/ipfix.xhtml
type Direction int32

const (
	Direction_INGRESS Direction = 0
	Direction_EGRESS  Direction = 1
)

var Direction_name = map[int32]string{
	0: "INGRESS",
	1: "EGRESS",
}

var Direction_value = map[string]int32{
	"INGRESS": 0,
	"EGRESS":  1,
}

func (x Direction) String() string {
	return proto.EnumName(Direction_name, int32(x))
}

func (Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d45e16ab3b808b59, []int{0}
}

// intentionally empty
type CollectorReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectorReply) Reset()         { *m = CollectorReply{} }
func (m *CollectorReply) String() string { return proto.CompactTextString(m) }
func (*CollectorReply) ProtoMessage()    {}
func (*CollectorReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45e16ab3b808b59, []int{0}
}

func (m *CollectorReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectorReply.Unmarshal(m, b)
}
func (m *CollectorReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectorReply.Marshal(b, m, deterministic)
}
func (m *CollectorReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectorReply.Merge(m, src)
}
func (m *CollectorReply) XXX_Size() int {
	return xxx_messageInfo_CollectorReply.Size(m)
}
func (m *CollectorReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectorReply.DiscardUnknown(m)
}

var xxx_messageInfo_CollectorReply proto.InternalMessageInfo

type Records struct {
	Entries              []*Record `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Records) Reset()         { *m = Records{} }
func (m *Records) String() string { return proto.CompactTextString(m) }
func (*Records) ProtoMessage()    {}
func (*Records) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45e16ab3b808b59, []int{1}
}

func (m *Records) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Records.Unmarshal(m, b)
}
func (m *Records) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Records.Marshal(b, m, deterministic)
}
func (m *Records) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Records.Merge(m, src)
}
func (m *Records) XXX_Size() int {
	return xxx_messageInfo_Records.Size(m)
}
func (m *Records) XXX_DiscardUnknown() {
	xxx_messageInfo_Records.DiscardUnknown(m)
}

var xxx_messageInfo_Records proto.InternalMessageInfo

func (m *Records) GetEntries() []*Record {
	if m != nil {
		return m.Entries
	}
	return nil
}

type Record struct {
	// protocol as defined by ETH_P_* in linux/if_ether.h
	// https://github.com/torvalds/linux/blob/master/include/uapi/linux/if_ether.h
	EthProtocol   uint32               `protobuf:"varint,1,opt,name=eth_protocol,json=ethProtocol,proto3" json:"eth_protocol,omitempty"`
	Direction     Direction            `protobuf:"varint,2,opt,name=direction,proto3,enum=pbflow.Direction" json:"direction,omitempty"`
	TimeFlowStart *timestamp.Timestamp `protobuf:"bytes,3,opt,name=time_flow_start,json=timeFlowStart,proto3" json:"time_flow_start,omitempty"`
	TimeFlowEnd   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time_flow_end,json=timeFlowEnd,proto3" json:"time_flow_end,omitempty"`
	// OSI-layer attributes
	DataLink             *DataLink  `protobuf:"bytes,5,opt,name=data_link,json=dataLink,proto3" json:"data_link,omitempty"`
	Network              *Network   `protobuf:"bytes,6,opt,name=network,proto3" json:"network,omitempty"`
	Transport            *Transport `protobuf:"bytes,7,opt,name=transport,proto3" json:"transport,omitempty"`
	Bytes                uint64     `protobuf:"varint,8,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Packets              uint64     `protobuf:"varint,9,opt,name=packets,proto3" json:"packets,omitempty"`
	Interface            string     `protobuf:"bytes,10,opt,name=interface,proto3" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45e16ab3b808b59, []int{2}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetEthProtocol() uint32 {
	if m != nil {
		return m.EthProtocol
	}
	return 0
}

func (m *Record) GetDirection() Direction {
	if m != nil {
		return m.Direction
	}
	return Direction_INGRESS
}

func (m *Record) GetTimeFlowStart() *timestamp.Timestamp {
	if m != nil {
		return m.TimeFlowStart
	}
	return nil
}

func (m *Record) GetTimeFlowEnd() *timestamp.Timestamp {
	if m != nil {
		return m.TimeFlowEnd
	}
	return nil
}

func (m *Record) GetDataLink() *DataLink {
	if m != nil {
		return m.DataLink
	}
	return nil
}

func (m *Record) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *Record) GetTransport() *Transport {
	if m != nil {
		return m.Transport
	}
	return nil
}

func (m *Record) GetBytes() uint64 {
	if m != nil {
		return m.Bytes
	}
	return 0
}

func (m *Record) GetPackets() uint64 {
	if m != nil {
		return m.Packets
	}
	return 0
}

func (m *Record) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

type DataLink struct {
	SrcMac               uint64   `protobuf:"varint,1,opt,name=src_mac,json=srcMac,proto3" json:"src_mac,omitempty"`
	DstMac               uint64   `protobuf:"varint,2,opt,name=dst_mac,json=dstMac,proto3" json:"dst_mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataLink) Reset()         { *m = DataLink{} }
func (m *DataLink) String() string { return proto.CompactTextString(m) }
func (*DataLink) ProtoMessage()    {}
func (*DataLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45e16ab3b808b59, []int{3}
}

func (m *DataLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataLink.Unmarshal(m, b)
}
func (m *DataLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataLink.Marshal(b, m, deterministic)
}
func (m *DataLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataLink.Merge(m, src)
}
func (m *DataLink) XXX_Size() int {
	return xxx_messageInfo_DataLink.Size(m)
}
func (m *DataLink) XXX_DiscardUnknown() {
	xxx_messageInfo_DataLink.DiscardUnknown(m)
}

var xxx_messageInfo_DataLink proto.InternalMessageInfo

func (m *DataLink) GetSrcMac() uint64 {
	if m != nil {
		return m.SrcMac
	}
	return 0
}

func (m *DataLink) GetDstMac() uint64 {
	if m != nil {
		return m.DstMac
	}
	return 0
}

type Network struct {
	SrcAddr              *IP      `protobuf:"bytes,1,opt,name=src_addr,json=srcAddr,proto3" json:"src_addr,omitempty"`
	DstAddr              *IP      `protobuf:"bytes,2,opt,name=dst_addr,json=dstAddr,proto3" json:"dst_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45e16ab3b808b59, []int{4}
}

func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (m *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(m, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetSrcAddr() *IP {
	if m != nil {
		return m.SrcAddr
	}
	return nil
}

func (m *Network) GetDstAddr() *IP {
	if m != nil {
		return m.DstAddr
	}
	return nil
}

type IP struct {
	// Types that are valid to be assigned to IpFamily:
	//	*IP_Ipv4
	//	*IP_Ipv6
	IpFamily             isIP_IpFamily `protobuf_oneof:"ip_family"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *IP) Reset()         { *m = IP{} }
func (m *IP) String() string { return proto.CompactTextString(m) }
func (*IP) ProtoMessage()    {}
func (*IP) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45e16ab3b808b59, []int{5}
}

func (m *IP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IP.Unmarshal(m, b)
}
func (m *IP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IP.Marshal(b, m, deterministic)
}
func (m *IP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IP.Merge(m, src)
}
func (m *IP) XXX_Size() int {
	return xxx_messageInfo_IP.Size(m)
}
func (m *IP) XXX_DiscardUnknown() {
	xxx_messageInfo_IP.DiscardUnknown(m)
}

var xxx_messageInfo_IP proto.InternalMessageInfo

type isIP_IpFamily interface {
	isIP_IpFamily()
}

type IP_Ipv4 struct {
	Ipv4 uint32 `protobuf:"fixed32,1,opt,name=ipv4,proto3,oneof"`
}

type IP_Ipv6 struct {
	Ipv6 []byte `protobuf:"bytes,2,opt,name=ipv6,proto3,oneof"`
}

func (*IP_Ipv4) isIP_IpFamily() {}

func (*IP_Ipv6) isIP_IpFamily() {}

func (m *IP) GetIpFamily() isIP_IpFamily {
	if m != nil {
		return m.IpFamily
	}
	return nil
}

func (m *IP) GetIpv4() uint32 {
	if x, ok := m.GetIpFamily().(*IP_Ipv4); ok {
		return x.Ipv4
	}
	return 0
}

func (m *IP) GetIpv6() []byte {
	if x, ok := m.GetIpFamily().(*IP_Ipv6); ok {
		return x.Ipv6
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*IP) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*IP_Ipv4)(nil),
		(*IP_Ipv6)(nil),
	}
}

type Transport struct {
	SrcPort uint32 `protobuf:"varint,1,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort uint32 `protobuf:"varint,2,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	// protocol as defined by IPPROTO_* in linux/in.h
	// https://github.com/torvalds/linux/blob/master/include/uapi/linux/in.h
	Protocol             uint32   `protobuf:"varint,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transport) Reset()         { *m = Transport{} }
func (m *Transport) String() string { return proto.CompactTextString(m) }
func (*Transport) ProtoMessage()    {}
func (*Transport) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45e16ab3b808b59, []int{6}
}

func (m *Transport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transport.Unmarshal(m, b)
}
func (m *Transport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transport.Marshal(b, m, deterministic)
}
func (m *Transport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transport.Merge(m, src)
}
func (m *Transport) XXX_Size() int {
	return xxx_messageInfo_Transport.Size(m)
}
func (m *Transport) XXX_DiscardUnknown() {
	xxx_messageInfo_Transport.DiscardUnknown(m)
}

var xxx_messageInfo_Transport proto.InternalMessageInfo

func (m *Transport) GetSrcPort() uint32 {
	if m != nil {
		return m.SrcPort
	}
	return 0
}

func (m *Transport) GetDstPort() uint32 {
	if m != nil {
		return m.DstPort
	}
	return 0
}

func (m *Transport) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func init() {
	proto.RegisterEnum("pbflow.Direction", Direction_name, Direction_value)
	proto.RegisterType((*CollectorReply)(nil), "pbflow.CollectorReply")
	proto.RegisterType((*Records)(nil), "pbflow.Records")
	proto.RegisterType((*Record)(nil), "pbflow.Record")
	proto.RegisterType((*DataLink)(nil), "pbflow.DataLink")
	proto.RegisterType((*Network)(nil), "pbflow.Network")
	proto.RegisterType((*IP)(nil), "pbflow.IP")
	proto.RegisterType((*Transport)(nil), "pbflow.Transport")
}

func init() {
	proto.RegisterFile("proto/flow.proto", fileDescriptor_d45e16ab3b808b59)
}

var fileDescriptor_d45e16ab3b808b59 = []byte{
	// 567 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xef, 0x6b, 0x13, 0x31,
	0x18, 0xde, 0xb5, 0x5d, 0xaf, 0xf7, 0xde, 0x7e, 0xd4, 0x30, 0x34, 0x16, 0xc1, 0x7a, 0x28, 0x9c,
	0x82, 0x57, 0xec, 0x64, 0x9f, 0x74, 0xe0, 0x74, 0xea, 0xc0, 0x8d, 0x92, 0x0e, 0x04, 0x41, 0x4a,
	0x7a, 0x49, 0xb7, 0xa3, 0xd7, 0xcb, 0x91, 0x44, 0x47, 0xff, 0x34, 0xff, 0x3b, 0x49, 0xd2, 0x5c,
	0x51, 0x3f, 0xf8, 0x2d, 0xef, 0xf3, 0x3c, 0xef, 0x73, 0xcf, 0xfb, 0x5e, 0x02, 0xfd, 0x5a, 0x0a,
	0x2d, 0x46, 0x8b, 0x52, 0xdc, 0x65, 0xf6, 0x88, 0xba, 0xf5, 0xdc, 0x54, 0x83, 0xc7, 0x37, 0x42,
	0xdc, 0x94, 0x7c, 0x64, 0xd1, 0xf9, 0x8f, 0xc5, 0x48, 0x17, 0x2b, 0xae, 0x34, 0x5d, 0xd5, 0x4e,
	0x98, 0xf4, 0xe1, 0xe0, 0xbd, 0x28, 0x4b, 0x9e, 0x6b, 0x21, 0x09, 0xaf, 0xcb, 0x75, 0x72, 0x0c,
	0x21, 0xe1, 0xb9, 0x90, 0x4c, 0xa1, 0x14, 0x42, 0x5e, 0x69, 0x59, 0x70, 0x85, 0x83, 0x61, 0x3b,
	0x8d, 0xc7, 0x07, 0x99, 0xf3, 0xcd, 0x9c, 0x82, 0x78, 0x3a, 0xf9, 0xd5, 0x86, 0xae, 0xc3, 0xd0,
	0x13, 0xd8, 0xe3, 0xfa, 0x76, 0x66, 0xed, 0x73, 0x51, 0xe2, 0x60, 0x18, 0xa4, 0xfb, 0x24, 0xe6,
	0xfa, 0x76, 0xb2, 0x81, 0xd0, 0x08, 0x22, 0x56, 0x48, 0x9e, 0xeb, 0x42, 0x54, 0xb8, 0x35, 0x0c,
	0xd2, 0x83, 0xf1, 0x3d, 0xef, 0xfc, 0xc1, 0x13, 0x64, 0xab, 0x41, 0x67, 0x70, 0x68, 0x82, 0xcf,
	0x8c, 0x62, 0xa6, 0x34, 0x95, 0x1a, 0xb7, 0x87, 0x41, 0x1a, 0x8f, 0x07, 0x99, 0x1b, 0x30, 0xf3,
	0x03, 0x66, 0xd7, 0x7e, 0x40, 0xb2, 0x6f, 0x5a, 0x3e, 0x96, 0xe2, 0x6e, 0x6a, 0x1a, 0xd0, 0x29,
	0xec, 0x6f, 0x3d, 0x78, 0xc5, 0x70, 0xe7, 0xbf, 0x0e, 0xb1, 0x77, 0x38, 0xaf, 0x18, 0x7a, 0x09,
	0x11, 0xa3, 0x9a, 0xce, 0xca, 0xa2, 0x5a, 0xe2, 0x5d, 0xdb, 0xdb, 0x6f, 0x42, 0x53, 0x4d, 0xbf,
	0x14, 0xd5, 0x92, 0xf4, 0xd8, 0xe6, 0x84, 0x9e, 0x43, 0x58, 0x71, 0x7d, 0x27, 0xe4, 0x12, 0x77,
	0xad, 0xf8, 0xd0, 0x8b, 0xaf, 0x1c, 0x4c, 0x3c, 0x6f, 0xd6, 0xa1, 0x25, 0xad, 0x54, 0x2d, 0xa4,
	0xc6, 0xa1, 0x15, 0x37, 0xeb, 0xb8, 0xf6, 0x04, 0xd9, 0x6a, 0xd0, 0x11, 0xec, 0xce, 0xd7, 0x9a,
	0x2b, 0xdc, 0x1b, 0x06, 0x69, 0x87, 0xb8, 0x02, 0x61, 0x08, 0x6b, 0x9a, 0x2f, 0xb9, 0x56, 0x38,
	0xb2, 0xb8, 0x2f, 0xd1, 0x23, 0x88, 0x8a, 0x4a, 0x73, 0xb9, 0xa0, 0x39, 0xc7, 0x30, 0x0c, 0xd2,
	0x88, 0x6c, 0x81, 0xe4, 0x0d, 0xf4, 0x7c, 0x7e, 0xf4, 0x00, 0x42, 0x25, 0xf3, 0xd9, 0x8a, 0xe6,
	0xf6, 0xbf, 0x75, 0x48, 0x57, 0xc9, 0xfc, 0x92, 0xe6, 0x86, 0x60, 0x4a, 0x5b, 0xa2, 0xe5, 0x08,
	0xa6, 0xf4, 0x25, 0xcd, 0x93, 0xaf, 0x10, 0x6e, 0x06, 0x42, 0xcf, 0xa0, 0x67, 0x9a, 0x29, 0x63,
	0xd2, 0x76, 0xc7, 0x63, 0xf0, 0x63, 0x5c, 0x4c, 0x88, 0x31, 0x7e, 0xc7, 0x98, 0x34, 0x32, 0x63,
	0x65, 0x65, 0xad, 0x7f, 0x65, 0x4c, 0x69, 0x23, 0x4b, 0xde, 0x42, 0xeb, 0x62, 0x82, 0x8e, 0xa0,
	0x53, 0xd4, 0x3f, 0x5f, 0x5b, 0xbf, 0xf0, 0xf3, 0x0e, 0xb1, 0xd5, 0x06, 0x3d, 0xb1, 0xed, 0x7b,
	0x1b, 0xf4, 0xe4, 0x2c, 0x86, 0xa8, 0xa8, 0x67, 0x0b, 0xba, 0x2a, 0xca, 0x75, 0xf2, 0x1d, 0xa2,
	0x66, 0x77, 0xe8, 0xa1, 0x4b, 0x66, 0x17, 0xec, 0xee, 0xa3, 0x49, 0x33, 0xd9, 0x50, 0x26, 0x8d,
	0xa5, 0x5a, 0x8e, 0x62, 0x4a, 0x5b, 0x6a, 0x00, 0xbd, 0xe6, 0x16, 0xb7, 0x2d, 0xd5, 0xd4, 0x2f,
	0x9e, 0x42, 0xd4, 0xdc, 0x54, 0x14, 0x43, 0x78, 0x71, 0xf5, 0x89, 0x9c, 0x4f, 0xa7, 0xfd, 0x1d,
	0x04, 0xd0, 0x3d, 0x77, 0xe7, 0x60, 0x7c, 0x0a, 0x51, 0xf3, 0xba, 0xd0, 0x2b, 0xe8, 0x4c, 0x79,
	0xc5, 0xd0, 0xe1, 0x9f, 0x8f, 0x48, 0x0d, 0xee, 0x7b, 0xe0, 0xaf, 0x97, 0xb8, 0x73, 0x06, 0xdf,
	0x7a, 0xd9, 0xc8, 0x91, 0xf3, 0xae, 0xfd, 0xf6, 0xf1, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9d,
	0xaa, 0xd7, 0xbc, 0xed, 0x03, 0x00, 0x00,
}
